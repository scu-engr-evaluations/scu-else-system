{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emily\\\\OneDrive\\\\Documents\\\\Git\\\\SCU-ELSE\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from \"./store/reducers/auth\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { Provider } from \"react-redux\";\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhances(applyMiddleware(thunk)));\nconst app = React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}));\nReactDOM.render(app, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n} // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/emily/OneDrive/Documents/Git/SCU-ELSE/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","reducer","createStore","compose","applyMiddleware","thunk","Provider","composeEnhances","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","app","render","document","getElementById","module","hot","accept","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sCAAP;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,MAAMC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CN,OAAvE;AAEA,MAAMO,KAAK,GAAGR,WAAW,CAACD,OAAD,EAAUM,eAAe,CACjDH,eAAe,CAACC,KAAD,CADkC,CAAzB,CAAzB;AAIA,MAAMM,GAAG,GACR,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD;AAMAZ,QAAQ,CAACc,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB;;AAEA,IAAIC,MAAM,CAACC,GAAX,EAAgB;AACfD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX;AACA,C,CAED;AACA;AACA;;;AACAjB,aAAa,CAACkB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducer from \"./store/reducers/auth\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(reducer, composeEnhances (\r\n\tapplyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\nif (module.hot) {\r\n\tmodule.hot.accept();\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}