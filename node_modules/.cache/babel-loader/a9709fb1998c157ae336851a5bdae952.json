{"ast":null,"code":"import*as actionTypes from\"./actionTypes\";import axios from'axios';export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token){return{type:actionTypes.AUTH_SUCCESS,token:token};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){localStorage.removeItem('token');localStorage.removeItem('expirationDate');return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationTime*1000);};};export var authLogin=function authLogin(username,password){return function(dispatch){dispatch(authStart());axios.post('http://127.0.0.1:8000/rest-auth/login/',{username:username,password:password}).then(function(res){var token=res.data.key;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem('token',token);localStorage.setItem('expirationDate',expirationDate);dispatch(authSuccess(token));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err));});};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem('token');if(token===undefined){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem('expirationDate'));if(expirationDate<=new Date()){dispatch(logout());}else{dispatch(authSuccess(token));dispatch(checkAuthTimeout(expirationDate.getTime()-new Date().getTime()/1000));}}};};","map":{"version":3,"sources":["C:/Users/emily/OneDrive/Documents/Git/SCU-ELSE/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_START\r\n\t}\r\n}\r\n\r\nexport const authSuccess = token => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_SUCCESS,\r\n\t\ttoken: token\r\n\t}\r\n}\r\n\r\nexport const authFail = error => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_FAIL,\r\n\t\terror: error\r\n\t}\r\n}\r\n\r\nexport const logout = () => {\r\n\tlocalStorage.removeItem('token');\r\n\tlocalStorage.removeItem('expirationDate');\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_LOGOUT\r\n\t}\r\n}\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n\treturn dispatch => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(logout());\t\r\n\t\t}, expirationTime*1000)\r\n\t}\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(authStart());\r\n\t\taxios.post('http://127.0.0.1:8000/rest-auth/login/', {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tconst token = res.data.key;\r\n\t\t\tconst expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n\t\t\tlocalStorage.setItem('token', token);\r\n\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\r\n\t\t\tdispatch(authSuccess(token));\r\n\t\t\tdispatch(checkAuthTimeout(3600));\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tdispatch(authFail(err))\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const authCheckState = () => {\r\n\treturn dispatch => {\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\tif (token === undefined) {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n\t\t\tif (expirationDate <= new Date()) {\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch(authSuccess(token));\r\n\t\t\t\tdispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime()/1000));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}